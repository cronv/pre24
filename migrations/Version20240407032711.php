<?php

declare(strict_types=1);

namespace cronvTaskManagementMigrations;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

final class Version20240407032711 extends AbstractMigration
{
    /**
     * Migration Description
     *
     * @return string
     */
    public function getDescription(): string
    {
        return 'Create tables for expense';
    }

    /**
     * Applying Migration
     *
     * @param Schema $schema An object representation of a database schema.
     *
     * @return void
     */
    public function up(Schema $schema): void
    {
        //--------------------------------------------------------------------------------
        // Таблица для хранения расходов
        $this->addSql('
        CREATE TABLE expense (
            id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
            user_id INT NOT NULL,
            amount DECIMAL(10,2) NOT NULL,
            category VARCHAR(255) NOT NULL,
            description TEXT,
            date DATE NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );');

        $this->addSql('CREATE INDEX idx_expense__user_id ON expense(user_id);');
        $this->addSql("COMMENT ON TABLE expense IS 'Список расходов';");
        $this->addSql("COMMENT ON COLUMN expense.user_id IS 'Внешний ключ users.id';");
        $this->addSql("COMMENT ON COLUMN expense.amount IS 'Сумма';");
        $this->addSql("COMMENT ON COLUMN expense.category IS 'Категория';");
        $this->addSql("COMMENT ON COLUMN expense.description IS 'Описание';");
        $this->addSql("COMMENT ON COLUMN expense.date IS 'Дата';");
        $this->addSql("COMMENT ON COLUMN expense.created_at IS 'Дата и время создания';");

        //--------------------------------------------------------------------------------
        // Таблица для хранения доходов
        $this->addSql('
        CREATE TABLE income (
            id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
            user_id INT NOT NULL,
            amount DECIMAL(10,2) NOT NULL,
            source VARCHAR(255) NOT NULL,
            description TEXT,
            date DATE NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );');

        $this->addSql('CREATE INDEX idx_income__user_id ON income(user_id);');
        $this->addSql("COMMENT ON TABLE income IS 'Список типов вопроса';");
        $this->addSql("COMMENT ON COLUMN income.id IS 'Идентификатор';");
        $this->addSql("COMMENT ON COLUMN income.user_id IS 'Внешний ключ users.id';");
        $this->addSql("COMMENT ON COLUMN income.amount IS 'Сумма';");
        $this->addSql("COMMENT ON COLUMN income.source IS 'Источник';");
        $this->addSql("COMMENT ON COLUMN income.description IS 'Описание';");
        $this->addSql("COMMENT ON COLUMN income.date IS 'Дата';");
        $this->addSql("COMMENT ON COLUMN income.created_at IS 'Дата и время создания';");
    }

    /**
     * Rolling back a migration
     *
     * @param Schema $schema An object representation of a database schema.
     * @return void
     */
    public function down(Schema $schema): void
    {
        $this->addSql('DROP TABLE IF EXISTS expense, income;');
    }
}
