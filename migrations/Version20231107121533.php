<?php

declare(strict_types=1);

namespace cronvTaskManagementMigrations;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

final class Version20231107121533 extends AbstractMigration
{
    /**
     * Migration Description
     *
     * @return string
     */
    public function getDescription(): string
    {
        return 'Create tables for task management and user authorization';
    }

    /**
     * Applying Migration
     *
     * @param Schema $schema An object representation of a database schema.
     *
     * @return void
     */
    public function up(Schema $schema): void
    {
        //--------------------------------------------------------------------------------
        // Таблица для  для пользователей
        $this->addSql('CREATE SEQUENCE IF NOT EXISTS users_seq;');
        $this->addSql('
        CREATE TABLE users (
            id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
            username VARCHAR(32) NOT NULL,
            roles JSONB NOT NULL,
            password VARCHAR(51) NOT NULL
        );');

        $this->addSql('CREATE INDEX idx_users__username ON users(username);');
        $this->addSql('CREATE UNIQUE INDEX idx_users__username_unique ON users(username);');
        $this->addSql("COMMENT ON TABLE users IS 'Список пользователей';");
        $this->addSql("COMMENT ON COLUMN users.id IS 'Идентификатор пользователя';");
        $this->addSql("COMMENT ON COLUMN users.username IS 'Имя/Логин';");
        $this->addSql("COMMENT ON COLUMN users.password IS 'Пароль в sha512';");

        //--------------------------------------------------------------------------------
        // Таблица для хранения задач
        $this->addSql('
        CREATE TABLE tasks (
            id UUID PRIMARY KEY,
            user_id BIGINT,
            name VARCHAR(255) NOT NULL,
            description TEXT NULL,
            deadline DATE NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
            updated_at TIMESTAMP DEFAULT NULL
        );');

        $this->addSql('CREATE INDEX idx_tasks__users_id ON tasks(user_id);');
        $this->addSql("COMMENT ON TABLE tasks IS 'Список задач';");
        $this->addSql("COMMENT ON COLUMN tasks.id IS 'Идентификатор задачи';");
        $this->addSql("COMMENT ON COLUMN tasks.user_id IS 'Идентификатор пользователя, к которому привязана задача';");
        $this->addSql("COMMENT ON COLUMN tasks.name IS 'Название';");
        $this->addSql("COMMENT ON COLUMN tasks.description IS 'Описание';");
        $this->addSql("COMMENT ON COLUMN tasks.deadline IS 'Срок выполнения';");
        $this->addSql("COMMENT ON COLUMN tasks.created_at IS 'Дата и время создания';");
        $this->addSql("COMMENT ON COLUMN tasks.updated_at IS 'Дата и время последнего обновления';");
    }
    /**
     * Rolling back a migration
     *
     * @param Schema $schema An object representation of a database schema.
     * @return void
     */
    public function down(Schema $schema): void
    {
        $this->addSql('DROP TABLE IF EXISTS users, tasks;');
        $this->addSql('DROP SEQUENCE IF EXISTS users_seq;');
    }
}
