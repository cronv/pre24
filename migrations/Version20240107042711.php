<?php

declare(strict_types=1);

namespace cronvTaskManagementMigrations;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

final class Version20240107042711 extends AbstractMigration
{
    /**
     * Migration Description
     *
     * @return string
     */
    public function getDescription(): string
    {
        return 'Create tables for survey';
    }

    /**
     * Applying Migration
     *
     * @param Schema $schema An object representation of a database schema.
     *
     * @return void
     */
    public function up(Schema $schema): void
    {
        //--------------------------------------------------------------------------------
        // Таблица для хранения анкет
        $this->addSql('
        CREATE TABLE survey (
            uuid UUID PRIMARY KEY,
            name VARCHAR(128) NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
            updated_at TIMESTAMP DEFAULT NULL
        );');

        $this->addSql('CREATE INDEX idx_survey__name ON survey(name);');
        $this->addSql("COMMENT ON TABLE survey IS 'Список анкет';");
        $this->addSql("COMMENT ON COLUMN survey.id IS 'Идентификатор';");
        $this->addSql("COMMENT ON COLUMN survey.name IS 'Название';");
        $this->addSql("COMMENT ON COLUMN survey.created_at IS 'Дата и время создания';");
        $this->addSql("COMMENT ON COLUMN survey.updated_at IS 'Дата и время последнего обновления';");

        //--------------------------------------------------------------------------------
        // Таблица для хранения типов вопроса
        $this->addSql('
        CREATE TABLE question_type (
            id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
            name VARCHAR(32) NOT NULL,
            description VARCHAR(64) NOT NULL
        );');

        $this->addSql("COMMENT ON TABLE question_type IS 'Список типов вопроса';");
        $this->addSql("COMMENT ON COLUMN question_type.id IS 'Идентификатор';");
        $this->addSql("COMMENT ON COLUMN question_type.name IS 'Название';");
        $this->addSql("COMMENT ON COLUMN question_type.description IS 'Описание';");
        $this->addSql("INSERT INTO question_type (name, description) VALUES 
             ('textarea', 'Одиночный (ввод)'), ('radio', 'Одиночный (выбор)'), ('checkbox', 'Множественный выбор');");

        //--------------------------------------------------------------------------------
        // Таблица для хранения вопросов
        $this->addSql('
        CREATE TABLE question (
            id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
            survey_uuid UUID NOT NULL,
            type_id BIGINT NOT NULL,
            name VARCHAR(255) NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
            updated_at TIMESTAMP DEFAULT NULL
        );');

        $this->addSql('CREATE INDEX idx_question__type_id ON question(type_id);');
        $this->addSql('CREATE INDEX idx_question__survey_uuid ON question(survey_uuid);');
        $this->addSql("COMMENT ON TABLE question IS 'Список вопросов';");
        $this->addSql("COMMENT ON COLUMN question.id IS 'Идентификатор';");
        $this->addSql("COMMENT ON COLUMN question.survey_uuid IS 'Внешний ключ survey.uuid';");
        $this->addSql("COMMENT ON COLUMN question.type_id IS 'Внешний ключ question_type.id';");
        $this->addSql("COMMENT ON COLUMN question.name IS 'Название';");
        $this->addSql("COMMENT ON COLUMN question.created_at IS 'Дата и время создания';");
        $this->addSql("COMMENT ON COLUMN question.updated_at IS 'Дата и время последнего обновления';");

        //--------------------------------------------------------------------------------
        // Таблица для хранения ответов вопросов
        $this->addSql('
        CREATE TABLE answer (
            id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
            value TEXT NOT NULL,
            is_correct BOOL NOT NULL,
            question_id BIGINT NOT NULL
        );');

        $this->addSql('CREATE INDEX idx_answer__question_id ON answer(question_id);');
        $this->addSql("COMMENT ON TABLE answer IS 'Список ответов вопроса';");
        $this->addSql("COMMENT ON COLUMN answer.id IS 'Идентификатор';");
        $this->addSql("COMMENT ON COLUMN answer.value IS 'Ответ';");
        $this->addSql("COMMENT ON COLUMN answer.is_correct IS 'Является правильным ответом';");
        $this->addSql("COMMENT ON COLUMN answer.question_id IS 'Внешний ключ question_type.id';");

        //--------------------------------------------------------------------------------
        // Таблица для назначенных анкет
        $this->addSql('
        CREATE TABLE survey_assignment (
            user_id BIGINT NOT NULL,
            survey_uuid UUID NOT NULL,
            attempts INTEGER NULL,
            access BOOL DEFAULT false,
            started_at TIMESTAMP NULL,
            ended_at TIMESTAMP NULL
        );');

        $this->addSql('CREATE UNIQUE INDEX uq_survey_assignment__user_id__survey_uuid ON survey_assignment(user_id, survey_uuid);');
        $this->addSql("COMMENT ON TABLE survey_assignment IS 'Список назначенных анкет';");
        $this->addSql("COMMENT ON COLUMN survey_assignment.user_id IS 'Внешний ключ users.id';");
        $this->addSql("COMMENT ON COLUMN survey_assignment.survey_uuid IS 'Внешний ключ survey.uuid';");
        $this->addSql("COMMENT ON COLUMN survey_assignment.attempts IS 'Количество попыток';");
        $this->addSql("COMMENT ON COLUMN survey_assignment.access IS 'Начало';");
        $this->addSql("COMMENT ON COLUMN survey_assignment.started_at IS 'Начало';");
        $this->addSql("COMMENT ON COLUMN survey_assignment.ended_at IS 'Окончание';");

        //--------------------------------------------------------------------------------
        // Таблица новых uuid для повторного прохождения и сохранения результатов
        $this->addSql('
        CREATE TABLE uuid_results (
            id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
            uuid UUID NOT NULL,
            uuid_new UUID NOT NULL
        );');

        $this->addSql('CREATE INDEX idx_uuid_results__uuid__uuid_new ON uuid_results(uuid, uuid_new);');
        $this->addSql("COMMENT ON TABLE uuid_results IS 'Список новых uuid для повторного прохождения и сохранения результатов (абстракция вместо Redis)';");
        $this->addSql("COMMENT ON COLUMN uuid_results.id IS 'Идентификатор';");
        $this->addSql("COMMENT ON TABLE uuid_results.uuid IS 'Внешний ключ survey_assignment.survey_uuid';");
        $this->addSql("COMMENT ON TABLE uuid_results.uuid_new IS 'Новый UUID';");

        //--------------------------------------------------------------------------------
        // Таблица для результатов проведения анкетирования
        $this->addSql('
        CREATE TABLE survey_results (
            uuid UUID NOT NULL,
            user_id BIGINT NOT NULL,
            survey_uuid UUID NOT NULL,
            question_id BIGINT NOT NULL,
            answer_id BIGINT NOT NULL
        );');

        $this->addSql('CREATE INDEX idx_survey_results__user_id__survey_uuid ON survey_results(user_id, survey_uuid);');
        $this->addSql("COMMENT ON TABLE survey_results IS 'Список результатов анкетирования';");
        $this->addSql("COMMENT ON TABLE survey_results.uuid IS 'Внешний ключ uuid_results.uuid_new';");
        $this->addSql("COMMENT ON COLUMN survey_results.user_id IS 'Внешний ключ users.id';");
        $this->addSql("COMMENT ON COLUMN survey_results.survey_uuid IS 'Внешний ключ survey.uuid';");
        $this->addSql("COMMENT ON COLUMN survey_results.question_id IS 'Внешний ключ question.id';");
        $this->addSql("COMMENT ON COLUMN survey_results.answer_id IS 'Внешний ключ answer.id';");

        //--------------------------------------------------------------------------------
        // Таблица для статистики проведения анкетирования
        $this->addSql('
        CREATE TABLE survey_statistics (
            uuid UUID NOT NULL,
            user_id BIGINT NOT NULL,
            survey_uuid UUID NOT NULL,
            number_questions INTEGER NOT NULL,
            number_correct INTEGER NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
        );');

        $this->addSql('CREATE INDEX idx_survey_statistics__user_id__survey_uuid ON survey_statistics(user_id, survey_uuid);');
        $this->addSql("COMMENT ON TABLE survey_statistics IS 'Список статистики анкетирования';");
        $this->addSql("COMMENT ON TABLE survey_statistics.uuid IS 'Внешний ключ uuid_results.uuid_new';");
        $this->addSql("COMMENT ON COLUMN survey_statistics.user_id IS 'Внешний ключ users.id';");
        $this->addSql("COMMENT ON COLUMN survey_statistics.survey_uuid IS 'Внешний ключ survey.uuid';");
        $this->addSql("COMMENT ON COLUMN survey_statistics.number_questions IS 'Количество вопросов';");
        $this->addSql("COMMENT ON COLUMN survey_statistics.number_correct IS 'Количество правильных ответов';");
        $this->addSql("COMMENT ON COLUMN survey_statistics.created_at IS 'Дата прохождения';");
    }
    /**
     * Rolling back a migration
     *
     * @param Schema $schema An object representation of a database schema.
     * @return void
     */
    public function down(Schema $schema): void
    {
        $this->addSql('DROP TABLE IF EXISTS survey, question_type, question, answer, survey_assignment, survey_results, survey_statistics;');
    }
}
